{"version":3,"sources":["components/DateTime/DateTime.jsx","components/DateTimePretty/DateTimePretty.jsx","components/Video/Video.jsx","components/VideoList/VideoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["DateTime","props","className","date","DateTimePretty","WithDateTime","Component","moment","fromNow","Video","src","url","title","frameborder","allow","allowfullscreen","VideoList","list","map","item","index","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAYeA,MAVf,SAAkBC,GACd,OACI,mBAAGC,UAAU,OAAb,SAAqBD,EAAME,Q,6BCYpBC,ICXTC,EDDN,SAAwBC,GACpB,OAAO,SAASL,GACZ,IAAME,EAAOI,IAAON,EAAME,KAAM,gBAAgBK,UAEhD,OAAO,cAACF,EAAD,2BAAeL,GAAf,IAAsBE,KAAMA,MCHtBC,CAAeJ,GAsBrBS,MApBf,SAAeR,GACX,OACI,sBAAKC,UAAU,QAAf,UACI,wBACIQ,IAAKT,EAAMU,IACXC,MAAM,QACNC,YAAY,IACZC,MAAM,4BACNC,iBAAe,IAEnB,cAACV,EAAD,CAAcF,KAAMF,EAAME,WCNvBa,MARf,SAAmBf,GACf,OAAOA,EAAMgB,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAAiB,cAAC,EAAD,CAAmBT,IAAKQ,EAAKR,IAAKR,KAAMgB,EAAKhB,MAAjCiB,OCqCxCC,MArCf,WAAgB,IAAD,EACWC,mBAAS,CAC/B,CACIX,IAAK,gFACLR,KAAM,uBAEV,CACIQ,IAAK,gFACLR,KAAM,uBAEV,CACIQ,IAAK,gFACLR,KAAM,uBAEV,CACIQ,IAAK,gFACLR,KAAM,uBAEV,CACIQ,IAAK,gFACLR,KAAM,uBAEV,CACIQ,IAAK,gFACLR,KAAM,yBAxBC,mBACNc,EADM,KAgCb,OAhCa,KAiCT,cAAC,EAAD,CAAWA,KAAMA,KCzBRM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a70acd40.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction DateTime(props) {\n    return (\n        <p className=\"date\">{props.date}</p>\n    )\n}\n\nDateTime.propTypes = {\n    date: PropTypes.string\n}\n\nexport default DateTime","import PropTypes from 'prop-types';\nimport moment from 'moment';\nimport 'moment/locale/ru';\n\nfunction DateTimePretty(Component) {\n    return function(props) {\n        const date = moment(props.date, 'YYYYMMDDhhmm').fromNow();\n\n        return <Component {...props} date={date} />\n    }\n}\n\nDateTimePretty.propTypes = {\n    date: PropTypes.string\n}\n\nexport default DateTimePretty","import React from 'react';\nimport DateTime from '../DateTime/DateTime';\nimport DateTimePretty from '../DateTimePretty/DateTimePretty';\nimport PropTypes from 'prop-types';\n\nconst WithDateTime = DateTimePretty(DateTime);\n\nfunction Video(props) {\n    return (\n        <div className=\"video\">\n            <iframe \n                src={props.url} \n                title=\"video\" \n                frameborder=\"0\" \n                allow=\"autoplay; encrypted-media\" \n                allowfullscreen\n            ></iframe>\n            <WithDateTime date={props.date} />\n        </div>\n    )\n}\n\nVideo.propTypes = {\n    url: PropTypes.string,\n    date: PropTypes.string\n}\n\nexport default Video\n","import Video from '../Video/Video';\nimport PropTypes from 'prop-types';\n\nfunction VideoList(props) {\n    return props.list.map((item, index) => <Video key={index} url={item.url} date={item.date} />);\n}\n\nVideoList.propTypes = {\n    list: PropTypes.array\n}\n\nexport default VideoList","import './App.css';\nimport React, {useState} from 'react';\nimport VideoList from './components/VideoList/VideoList';\n\nfunction App() {\n  const [list, setList] = useState([\n    {\n        url: 'https://www.youtube.com/embed/rN6nlNC9WQA?rel=0&amp;controls=0&amp;showinfo=0',\n        date: '2021-03-22 13:20:00'\n    },\n    {\n        url: 'https://www.youtube.com/embed/dVkK36KOcqs?rel=0&amp;controls=0&amp;showinfo=0',\n        date: '2021-03-22 12:10:00'\n    },\n    {\n        url: 'https://www.youtube.com/embed/xGRjCa49C6U?rel=0&amp;controls=0&amp;showinfo=0',\n        date: '2021-03-21 23:16:00'\n    },\n    {\n        url: 'https://www.youtube.com/embed/RK1K2bCg4J8?rel=0&amp;controls=0&amp;showinfo=0',\n        date: '2021-01-03 12:10:00'\n    },\n    {\n        url: 'https://www.youtube.com/embed/TKmGU77INaM?rel=0&amp;controls=0&amp;showinfo=0',\n        date: '2018-01-01 16:17:00'\n    },\n    {\n        url: 'https://www.youtube.com/embed/TxbE79-1OSI?rel=0&amp;controls=0&amp;showinfo=0',\n        date: '2017-12-02 05:24:00'\n    },\n  ]);\n\n  if (1 < 0) {\n    setList();\n  }\n\n  return (\n      <VideoList list={list} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}